From cd7c98574d8490d660343146a7ade8819fde9bd0 Mon Sep 17 00:00:00 2001
From: Julien Jerphanion <git@jjerphan.xyz>
Date: Thu, 10 Jul 2025 12:47:12 +0200
Subject: [PATCH] maint: Add support for libprotobuf 6

Signed-off-by: Julien Jerphanion <git@jjerphan.xyz>
---
 cpp/arcticdb/codec/segment.cpp       |  2 +-
 cpp/arcticdb/python/python_utils.hpp |  2 +-
 environment-dev.yml                  |  2 +-
 python/arcticc/pb2/__init__.py       | 10 ++++++++--
 setup.cfg                            |  2 +-
 setup.py                             |  5 ++++-
 6 files changed, 16 insertions(+), 7 deletions(-)

diff --git a/cpp/arcticdb/codec/segment.cpp b/cpp/arcticdb/codec/segment.cpp
index 60ef22171..fa27b2663 100644
--- a/cpp/arcticdb/codec/segment.cpp
+++ b/cpp/arcticdb/codec/segment.cpp
@@ -97,7 +97,7 @@ SegmentHeaderProtoWrapper decode_protobuf_header(const uint8_t* data, size_t hea
     google::protobuf::io::ArrayInputStream ais(data, static_cast<int>(header_bytes_size));
 
     auto arena = std::make_unique<google::protobuf::Arena>();
-    auto seg_hdr = google::protobuf::Arena::CreateMessage<arcticdb::proto::encoding::SegmentHeader>(arena.get());
+    auto seg_hdr = google::protobuf::Arena::Create<arcticdb::proto::encoding::SegmentHeader>(arena.get());
     seg_hdr->ParseFromZeroCopyStream(&ais);
     ARCTICDB_TRACE(log::codec(), "Decoded protobuf header: {}", seg_hdr->DebugString());
     return {seg_hdr, std::move(arena)};
diff --git a/cpp/arcticdb/python/python_utils.hpp b/cpp/arcticdb/python/python_utils.hpp
index 1d963dd24..e84cb266b 100644
--- a/cpp/arcticdb/python/python_utils.hpp
+++ b/cpp/arcticdb/python/python_utils.hpp
@@ -115,7 +115,7 @@ PyObject** fill_with_none(PyObject** ptr_dest, size_t count, PythonHandlerData&
 template<typename Msg>
 py::object pb_to_python(const Msg & out){
     std::string_view full_name = out.descriptor()->full_name();
-    auto & name = out.descriptor()->name();
+    const auto & name = out.descriptor()->name();
     std::string_view pkg_name = full_name.substr(0, full_name.size() - name.size());
     if(pkg_name[pkg_name.size()-1] == '.'){
         pkg_name = pkg_name.substr(0, pkg_name.size()-1);
diff --git a/environment-dev.yml b/environment-dev.yml
index 10b1c07c4..b6846f288 100644
--- a/environment-dev.yml
+++ b/environment-dev.yml
@@ -31,7 +31,7 @@ dependencies:
   - cyrus-sasl
   - aws-sdk-cpp >=1.11.405
   - prometheus-cpp
-  - libprotobuf <6
+  - libprotobuf <7
   - openssl
   - libcurl
   - bitmagic
diff --git a/python/arcticc/pb2/__init__.py b/python/arcticc/pb2/__init__.py
index 0781f9a8d..816870653 100644
--- a/python/arcticc/pb2/__init__.py
+++ b/python/arcticc/pb2/__init__.py
@@ -3,7 +3,7 @@ import sys as _sys
 import google.protobuf as _protobuf
 
 _proto_ver = _protobuf.__version__.split(".")[0]
-if _proto_ver in "345":
+if _proto_ver in "3456":
 
     _python = _sys.version_info[:2]
     if _python >= (3, 11) and _proto_ver == "3":
@@ -25,6 +25,12 @@ if _proto_ver in "345":
             "We recommend updating your environment to use the minimum supported version of Python.\n"
             "For more information, see: https://devguide.python.org/versions/#supported-versions"
         )
+    elif _python <= (3, 8) and _proto_ver >= "6":
+        raise RuntimeError(
+            "Your environment uses protobuf 6 which does not support Python<=3.8.\n"
+            "We recommend updating your environment to use the minimum supported version of Python.\n"
+            "For more information, see: https://devguide.python.org/versions/#supported-versions"
+        )
 
     # Use the namespace package (https://peps.python.org/pep-0420) feature to select the pb2 files matching the protobuf
     _protos_path = _os.path.abspath(
@@ -32,4 +38,4 @@ if _proto_ver in "345":
     )
     __path__.append(_protos_path)
 else:
-    raise NotImplementedError(f"We only support protobuf versions 3, 4 & 5. You have {_protobuf.__version__}")
+    raise NotImplementedError(f"We only support protobuf versions 3, 4, 5 & 6. You have {_protobuf.__version__}")
diff --git a/setup.cfg b/setup.cfg
index 684c20509..205b68674 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -38,7 +38,7 @@ install_requires =
     pandas
     numpy <= 2.2.6 # Per https://github.com/numpy/numpy/issues/29150 we are using older manylinux. When we move to manylinux_2_28 we can remove it
     attrs
-    protobuf >=3.5.0.post1, < 6 # Per https://github.com/grpc/grpc/blob/v1.45.3/requirements.txt
+    protobuf >=3.5.0.post1, < 7 # Per https://github.com/grpc/grpc/blob/v1.45.3/requirements.txt
     msgpack >=0.5.0 # msgpack 0.5.0 is required for strict_types argument, needed for correct pickling fallback
     pyyaml
     packaging
diff --git a/setup.py b/setup.py
index b76274203..8f99adfc0 100644
--- a/setup.py
+++ b/setup.py
@@ -33,7 +33,7 @@ def _log_and_run(*cmd, **kwargs):
 
 class CompileProto(Command):
     # When adding new protobuf versions, also update: setup.cfg, python/arcticdb/__init__.py
-    _PROTOBUF_TO_GRPC_VERSION = {"3": "<1.31", "4": ">=1.49", "5": ">=1.68.1"}
+    _PROTOBUF_TO_GRPC_VERSION = {"3": "<1.31", "4": ">=1.49", "5": ">=1.68.1", "6": ">=1.73.0"}
 
     description = '"protoc" generate code _pb2.py from .proto files'
     user_options = [
@@ -69,6 +69,9 @@ class CompileProto(Command):
                 # Not compatible with protobuf<5.26.1 as
                 # Python 3.13 requires GRPCIO >= 1.66.2, which requires protobuf >=5.26.1 https://github.com/grpc/grpc/blob/6fa8043bf9befb070b846993b59a3348248e6566/requirements.txt#L4
                 print(f"Python protobuf {proto_ver} does not run on Python {python}. Skipping...")
+            elif not ARCTICDB_USING_CONDA and python <= (3, 8) and proto_ver == "6":
+                # Python 3.8 is not compatible with protobuf 6
+                print(f"Python protobuf {proto_ver} does not run on Python {python}. Skipping...")
             else:
                 self._compile_one_version(proto_ver, os.path.join(output_dir, proto_ver))
 
-- 
2.50.0

